# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'etc'

def custom_ip_address(is_home = false, num = 0)
  header = "10.211."
  if is_home
    return "%s100.%d" % [header, 100 + num]
  else
    suffix = Etc.getlogin[-3..-1].to_i * 3
    return "%s%d.%d" % [header, suffix / 256, suffix % 256 - num]
  end
end

@ip1 = custom_ip_address(ENV['IS_HOME'], 2)
@ip2 = custom_ip_address(ENV['IS_HOME'], 1)

puts "Custom Vagrantfile:"
puts " - Machine 1: IP %s" % [@ip1]
puts " - Machine 2: IP %s" % [@ip2]

$update_ubuntu = <<SCRIPT
sudo apt-get update
sudo apt-get install python-dev python3-dev -y
SCRIPT

Vagrant.configure("2") do |config|
  config.hostmanager.enabled = false
  config.hostmanager.manage_guest = true
  config.hostmanager.include_offline = true
  config.hostmanager.ignore_private_ip = false
  config.ssh.forward_agent = true
  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.define :custom_node1 do |node1|
    node1.vm.box = "ubuntu/bionic64"
    node1.vm.provider "virtualbox" do |vb|
      vb.cpus = "1"
      vb.memory = "1024"
    end
    node1.vm.network :private_network, ip: @ip1
    node1.vm.hostname = Etc.getlogin + "-custom-node1"
    node1.vm.provision :hostmanager
    node1.vm.provision :shell, inline: $update_ubuntu
    node1.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/me.pub"
    node1.vm.provision :shell, inline: <<-SHELL
      sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
      sudo service ssh restart
    SHELL
    node1.vm.provision "shell", inline: <<-SHELL
      cat /home/vagrant/.ssh/me.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
  end

  config.vm.define :custom_node2 do |node2|
    node2.vm.box = "ubuntu/trusty64"
    node2.vm.provider "virtualbox" do |vb|
      vb.cpus = "1"
      vb.memory = "1024"
    end
    node2.vm.network :private_network, ip: @ip2
    node2.vm.hostname = Etc.getlogin + "-custom-node2"
    node2.vm.provision :hostmanager
    node2.vm.provision :shell, inline: $update_ubuntu
    node2.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/me.pub"
    node2.vm.provision "shell", inline: <<-SHELL
      cat /home/vagrant/.ssh/me.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
    node2.vm.provision :shell, inline: <<-SHELL
      sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
      sudo service ssh restart
    SHELL
  end
end

